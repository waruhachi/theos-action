name: 'Install & Setup Theos'
description: 'Use Theos in your GitHub Actions to build iOS tweaks'
author: 'waruhachi'
branding:
  icon: dollar-sign
  color: purple

inputs:
  advanced:
    description: 'Enable advanced options'
    required: false
    default: false
  theos-dir:
    description: 'Directory to install Theos to'
    required: false
    default: '${{ github.workspace }}/theos'
  theos-src:
    description: 'What repo to clone Theos from'
    required: false
    default: 'theos/theos'
  theos-branch:
    description: 'What branch to clone Theos from'
    required: false
    default: 'master'
  theos-cache:
    description: 'Cache Theos'
    required: false
    default: true
  theos-cache-dir:
    description: 'Directory to cache Theos to'
    required: false
    default: '${{ github.workspace }}/cache/theos'
  theosSDK-dir:
    description: 'Directory to install iOS SKs to'
    required: false
    default: '${{ github.workspace }}/theos/sdks'
  theosSDK-src:
    description: 'What repo to clone iOS SKs from'
    required: false
    default: 'theos/sdks'
  theosSDK-branch:
    description: 'What branch to clone iOS SKs from'
    required: false
    default: 'master'
  theosSDK-cache:
    description: 'Cache iOS SDKs'
    required: false
    default: true
  theosSDK-cache-dir:
    description: 'Directory to cache iOS SDKs to'
    required: false
    default: '${{ github.workspace }}/cache/theosSDK'

runs:
  using: "composite"
  steps:
    # Simple Setup
    - name: Get Current Hour
      id: get-hour
      if: inputs.advanced == 'false'
      run: |
        echo "hour=$(/bin/date -u "+%H")" >> $GITHUB_OUTPUT
      shell: bash

    - name: Setup Theos cache
      id: theos-cache-simple
      uses: actions/cache@v4
      if: inputs.advanced == 'false' && inputs.theos-cache == 'true'
      with:
        path: ${{ inputs.theos-dir }}
        key: ${{ inputs.theos-src }}-${{ inputs.theos-branch }}-${{ steps.get-hour.outputs.hour }}

    - name: Install Theos
      if: inputs.advanced == 'false' && (inputs.theos-cache != 'true' || steps.theos-cache-simple.outputs.cache-hit != 'true')
      shell: bash
      run: |
        bash -c "$(curl -fsSL https://raw.githubusercontent.com/${{ inputs.theos-src }}/${{ inputs.theos-branch }}/bin/install-theos)" || { echo "Failed to install Theos"; exit 1; }
    
    - name: Update Theos
      if: inputs.advanced == 'false' && (inputs.theos-cache != 'true' || steps.theos-cache-simple.outputs.cache-hit != 'true')
      shell: bash
      run: |
        source ~/.bashrc && $THEOS/bin/update-theos
    
    # Advanced Setup
    - name: Setup Theos cache
      id: theos-cache
      uses: actions/cache@v4
      if: inputs.advanced == 'true' && inputs.theos-cache == 'true'
      with:
        path: ${{ inputs.theos-dir }}
        key: ${{ inputs.theos-src }}-${{ inputs.theos-branch }}-${{ hashFiles(inputs.theos-src) }}

    - name: Restore Theos from cache
      if: inputs.advanced == 'true' && inputs.theos-cache == 'true' && steps.theos-cache.outputs.cache-hit == 'true' && inputs.theos-cache-dir != ${{ inputs.theos-dir }}
      shell: bash
      run: |
        sudo rsync -aWlHh --inplace ${{ inputs.theos-cache-dir }}/ ${{ inputs.theos-dir }}

    - name: Install Theos
      if: inputs.advanced == 'true' && inputs.theos-cache != 'true' || steps.theos-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        curl -fsSL https://raw.githubusercontent.com/${{ inputs.theos-src }}/${{ inputs.theos-branch }}/bin/install-theos

    - name: Cache Theos
      if: inputs.advanced == 'true' && inputs.theos-cache == 'true' && steps.theos-cache.outputs.cache-hit != 'true' && inputs.theos-cache-dir != ${{ inputs.theos-dir }}
      shell: bash
      run: |
        sudo rsync -alHh --inplace ${{ inputs.theos-dir }} ${{ inputs.theos-cache-dir }}/

    - name: Setup Theos SDKs cache
      id: theosSDK-cache
      uses: actions/cache@v4
      if: inputs.advanced == 'true' && inputs.theosSDK-cache == 'true'
      with:
        path: ${{ inputs.theosSDK-cache-dir }}
        key: ${{ inputs.theosSDK-src }}-${{ inputs.theosSDK-branch }}-${{ hashFiles(inputs.theosSDK-src) }}

    - name: Restore Theos SDKs from cache
      if: inputs.advanced == 'true' && inputs.theosSDK-cache == 'true' && steps.theosSDK-cache.outputs.cache-hit == 'true' && inputs.theosSDK-cache-dir != ${{ inputs.theosSDK-dir }}
      shell: bash
      run: |
        sudo rsync -aWlHh --inplace ${{ inputs.theosSDK-cache-dir }}/ ${{ inputs.theosSDK-dir }}

    - name: Install Theos SDKs
      if: inputs.advanced == 'true' && inputs.theosSDK-cache != 'true' || steps.theosSDK-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        rm -rf ${{ inputs.theos-dir }}/sdks/* 
        curl -sL https://github.com/${{ inputs.theosSDK-src }}/archive/${{ inputs.theosSDK-branch }}.tar.gz | tar -xzf - --strip-components=1 -C ${{ inputs.theos-dir }}/sdks

    - name: Cache Theos SDKs
      if: inputs.advanced == 'true' && inputs.theosSDK-cache == 'true' && steps.theosSDK-cache.outputs.cache-hit != 'true' && inputs.theosSDK-cache-dir != ${{ inputs.theosSDK-dir }}
      shell: bash
      run: |
        sudo rsync -alHh --inplace ${{ inputs.theosSDK-dir }} ${{ inputs.theosSDK-cache-dir }}/
