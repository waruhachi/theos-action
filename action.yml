name: "Install & Setup Theos"
description: "Use Theos in your GitHub Actions to build iOS tweaks"
author: "waruhachi"
branding:
  icon: dollar-sign
  color: purple

inputs:
  theos-src:
    description: "What repo to clone Theos from"
    required: false
    default: "theos/theos"
  theos-branch:
    description: "What branch to clone Theos from"
    required: false
    default: "master"
  sdks-src:
    description: "What repo to clone the patched SDK from"
    required: false
    default: "theos/sdks"
  sdks-branch:
    description: "What branch to clone the patched SDK from"
    required: false
    default: "master"
  libgcuniversal:
    description: "Whether to install LibGcUniversal"
    required: false
    default: "false"
  libgcuniversal-src:
    description: "What repo to clone LibGcUniversal from"
    required: false
    default: "MrGcGamer/LibGcUniversalDocumentation"
  libgcuniversal-branch:
    description: "What branch to clone LibGcUniversal from"
    required: false
    default: "master"
  altlist:
    description: "Whether to install AltList"
    required: false
    default: "false"
  altlist-src:
    description: "What repo to clone AltList from"
    required: false
    default: "opa334/AltList"
  altlist-branch:
    description: "What branch to clone AltList from"
    required: false
    default: "main"

runs:
  using: "composite"
  steps:
    - name: Adding Theos Environment Variables
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
      run: |
        echo "THEOS=${{ github.workspace }}/theos" >> $GITHUB_ENV

    - name: Generate Cache Key
      id: cache-key
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        set -euo pipefail

        theos_sha=$(gh api -H 'Accept: application/vnd.github.sha' /repos/${{ inputs.theos-src }}/commits/${{ inputs.theos-branch }})
        sdks_sha=$(gh api -H 'Accept: application/vnd.github.sha' /repos/${{ inputs.sdks-src }}/commits/${{ inputs.sdks-branch }})

        if [[ "${{ inputs.libgcuniversal }}" == 'true' ]]; then
          libgc_sha=$(gh api -H 'Accept: application/vnd.github.sha' /repos/${{ inputs.libgcuniversal-src }}/commits/${{ inputs.libgcuniversal-branch }})
        else
          libgc_sha="none"
        fi

        if [[ "${{ inputs.altlist }}" == 'true' ]]; then
          altlist_sha=$(gh api -H 'Accept: application/vnd.github.sha' /repos/${{ inputs.altlist-src }}/commits/${{ inputs.altlist-branch }})
        else
          altlist_sha="none"
        fi

        echo "key=${{ inputs.theos-src }}-${{ inputs.theos-branch }}-$theos_sha|${{ inputs.sdks-src }}-${{ inputs.sdks-branch }}-$sdks_sha|${{ inputs.libgcuniversal-src }}-${{ inputs.libgcuniversal-branch }}-$libgc_sha|${{ inputs.altlist-src }}-${{ inputs.altlist-branch }}-$altlist_sha" >> $GITHUB_OUTPUT

    - name: Install dependencies
      shell: bash
      run: |
        set -euo pipefail

        brew install make ldid
        echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH

    - name: Theos Cache
      id: theos-cache
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/theos
        key: ${{ steps.cache-key.outputs.key }}

    - name: Setup Theos
      if: steps.theos-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.theos-src }}
        ref: ${{ inputs.theos-branch }}
        submodules: recursive
        path: ${{ github.workspace }}/theos

    - name: Setup SDKs
      if: steps.theos-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.sdks-src }}
        ref: ${{ inputs.sdks-branch }}
        submodules: recursive
        path: theos/sdks

    - name: Setup LibGcUniversal
      if: steps.theos-cache.outputs.cache-hit != 'true' && inputs.libgcuniversal == 'true'
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.libgcuniversal-src }}
        ref: ${{ inputs.libgcuniversal-branch }}
        path: libgcuniversal

    - name: Install LibGcUniversal
      if: steps.theos-cache.outputs.cache-hit != 'true' && inputs.libgcuniversal == 'true'
      shell: bash
      run: |
        cd libgcuniversal
        ./install.sh

    - name: Setup AltList
      if: steps.theos-cache.outputs.cache-hit != 'true' && inputs.altlist == 'true'
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.altlist-src }}
        ref: ${{ inputs.altlist-branch }}
        path: altlist

    - name: Install AltList
      if: steps.theos-cache.outputs.cache-hit != 'true' && inputs.altlist == 'true'
      shell: bash
      run: |
        cd altlist
        ./install_to_theos.sh

    - name: Update Theos
      if: steps.theos-cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        $THEOS/bin/update-theos

    - name: Upload Theos Artifact
      uses: actions/upload-artifact@v4
      with:
        name: theos
        path: ${{ github.workspace }}/theos
